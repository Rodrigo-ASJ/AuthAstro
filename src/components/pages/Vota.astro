---
import Layout from '../../layouts/Layout.astro';

//componentes
import Button from '../Button.astro';
import VoteSystem from '../VoteSystem.tsx';

//Iconos
import SorteVoteIcon from '../icons/SortVoteIcon.astro';
import CheckPencilIcon from '../icons/CheckPencil.astro';
import PodiumIcon from '../icons/Podium.astro';
import TapButtonIcon from '../icons/TapButton.astro';
import ShareIcon from '../icons/Share.astro';
import ThinkBrainIcon from '../icons/ThinkBrain.astro';

//Traducción
import { getI18N } from '../../i18n';
const { currentLocale } = Astro;
const i18n = getI18N({ currentLocale });

//Auth.js
import { getSession } from 'auth-astro/server';
const session = await getSession(Astro.request); // saber si el usaurio esta registrado

//bagckgroun si hay session
const bkg = session ? 'vote-system-bkg.webp' : 'vota-bkg.webp';
---

<Layout title="vota" description="Vota">
	<section class="bg-no-repeat bg-cover relative pb-24 min-h-screen w-full max-w-[100vw]">
		<img
			src={`/${bkg}`}
			alt="ESLAND cover"
			class="absolute h-full w-full animate-fade object-cover object-center animate-duration-1000 animate-ease-in-out -z-10"
		/>

		{
			// si no tenemos sesión muestre esto:
			!session && (
				<div class="mx-auto flex flex-col max-w-7xl pt-40">
					<h1 class="uppercase mb-10 text-left text-3xl lg:text-5xl font-bold tracking-wider leading-loose max-w-xl text-balance">
						Las votaciones ya están aquí
					</h1>
					<div class="mb-10">
						<Button id="vote-button" url="#">
							¡Empezar con las votaciones!
						</Button>
					</div>
					<p class="max-w-3xl text-pretty text-2xl px-2 mb-10">
						Ha llegado el momento más importante. <strong>Votar en la 3ª edición de los Premios ESLAND</strong>. Para
						que tus votos se contabilicen de forma correcta, te dejamos algunos consejos:
					</p>

					<ul class="flex flex-col gap-y-10 text-2xl pl-4 font-extralight">
						<li class="flex gap-x-6 items-center">
							<SorteVoteIcon />
							<span>
								Vota, <strong>por orden de preferencia</strong>, hasta 4 nominados por categoria.
							</span>
						</li>
						<li class="flex gap-x-6 items-center">
							<CheckPencilIcon />
							<span>
								<strong>No es obligatorio votar en cada categoría</strong>.
							</span>
						</li>
						<li class="flex gap-x-6 items-center">
							<PodiumIcon />
							<span>
								No es obligatorio pero sí recomendable el <strong>uso del voto rankeado.</strong>
							</span>
						</li>
						<li class="flex gap-x-6 items-center">
							<TapButtonIcon />
							<span>
								Una vez tengas clara tu elección, <strong>asegúrate de pulsar "enviar mis votos".</strong>
							</span>
						</li>
						<li class="flex gap-x-6 items-center">
							<ShareIcon />
							<span>
								<strong>Recuerda compartir tus votos</strong> en rede sociales.
							</span>
						</li>
						<li class="flex gap-x-6 items-center">
							<ThinkBrainIcon />
							<span>
								Elige sabiamente y<strong>revisa tus votos</strong>, solo tienes una oportunidad.
							</span>
						</li>
						<span class="opacity-85 text-base mt-4">
							Las votaciones estarán abiertas hasta el domingo 14 de enero a las 24:00h (hora española)
						</span>
					</ul>
				</div>
			)
		}

		{
			session && <VoteSystem client:load />
		}
	</section>
</Layout>

<style>
	p {
		text-shadow:
			0 0 5px rgba(0, 0, 0, 0.3),
			0 0 10px rgba(0, 0, 0, 0.7);
	}
</style>

<script>
	//auth.js
	const { signIn, signOut } = await import('auth-astro/client');
	// Pongo un $ delante para que se vea que es un elemento del DOM
	// es una cosa que se hacía en el pasado con Jquery es una manía
	// que se me ha quedado porque me gusta :)
	const $button = document.querySelector('#vote-button');

	$button?.addEventListener('click', async (event) => {
		event.preventDefault(); //evitar comportamiento por defecto, ya que es un anchor
		await signIn('twitch', {
			callbackUrl: '/vota', //<-- redirección al finalizar
		});
	});
</script>
